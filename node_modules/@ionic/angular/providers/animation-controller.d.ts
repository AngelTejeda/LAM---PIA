import { Animation } from '@ionic/core';
import * as ɵngcc0 from '@angular/core';
export declare class AnimationController {
    /**
     * Create a new animation
     */
    create(animationId?: string): Animation;
    /**
     * EXPERIMENTAL
     *
     * Given a progression and a cubic bezier function,
     * this utility returns the time value(s) at which the
     * cubic bezier reaches the given time progression.
     *
     * If the cubic bezier never reaches the progression
     * the result will be an empty array.
     *
     * This is most useful for switching between easing curves
     * when doing a gesture animation (i.e. going from linear easing
     * during a drag, to another easing when `progressEnd` is called)
     */
    easingTime(p0: number[], p1: number[], p2: number[], p3: number[], progression: number): number[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AnimationController, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AnimationController>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uLWNvbnRyb2xsZXIuZC50cyIsInNvdXJjZXMiOlsiYW5pbWF0aW9uLWNvbnRyb2xsZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFuaW1hdGlvbiB9IGZyb20gJ0Bpb25pYy9jb3JlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW5pbWF0aW9uQ29udHJvbGxlciB7XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSBhIG5ldyBhbmltYXRpb25cclxuICAgICAqL1xyXG4gICAgY3JlYXRlKGFuaW1hdGlvbklkPzogc3RyaW5nKTogQW5pbWF0aW9uO1xyXG4gICAgLyoqXHJcbiAgICAgKiBFWFBFUklNRU5UQUxcclxuICAgICAqXHJcbiAgICAgKiBHaXZlbiBhIHByb2dyZXNzaW9uIGFuZCBhIGN1YmljIGJlemllciBmdW5jdGlvbixcclxuICAgICAqIHRoaXMgdXRpbGl0eSByZXR1cm5zIHRoZSB0aW1lIHZhbHVlKHMpIGF0IHdoaWNoIHRoZVxyXG4gICAgICogY3ViaWMgYmV6aWVyIHJlYWNoZXMgdGhlIGdpdmVuIHRpbWUgcHJvZ3Jlc3Npb24uXHJcbiAgICAgKlxyXG4gICAgICogSWYgdGhlIGN1YmljIGJlemllciBuZXZlciByZWFjaGVzIHRoZSBwcm9ncmVzc2lvblxyXG4gICAgICogdGhlIHJlc3VsdCB3aWxsIGJlIGFuIGVtcHR5IGFycmF5LlxyXG4gICAgICpcclxuICAgICAqIFRoaXMgaXMgbW9zdCB1c2VmdWwgZm9yIHN3aXRjaGluZyBiZXR3ZWVuIGVhc2luZyBjdXJ2ZXNcclxuICAgICAqIHdoZW4gZG9pbmcgYSBnZXN0dXJlIGFuaW1hdGlvbiAoaS5lLiBnb2luZyBmcm9tIGxpbmVhciBlYXNpbmdcclxuICAgICAqIGR1cmluZyBhIGRyYWcsIHRvIGFub3RoZXIgZWFzaW5nIHdoZW4gYHByb2dyZXNzRW5kYCBpcyBjYWxsZWQpXHJcbiAgICAgKi9cclxuICAgIGVhc2luZ1RpbWUocDA6IG51bWJlcltdLCBwMTogbnVtYmVyW10sIHAyOiBudW1iZXJbXSwgcDM6IG51bWJlcltdLCBwcm9ncmVzc2lvbjogbnVtYmVyKTogbnVtYmVyW107XHJcbn1cclxuIl19