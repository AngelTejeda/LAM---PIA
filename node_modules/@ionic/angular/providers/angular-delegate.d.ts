import { ApplicationRef, ComponentFactoryResolver, Injector, NgZone, ViewContainerRef } from '@angular/core';
import { FrameworkDelegate } from '@ionic/core';
import * as ɵngcc0 from '@angular/core';
export declare class AngularDelegate {
    private zone;
    private appRef;
    constructor(zone: NgZone, appRef: ApplicationRef);
    create(resolver: ComponentFactoryResolver, injector: Injector, location?: ViewContainerRef): AngularFrameworkDelegate;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularDelegate, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AngularDelegate>;
}
export declare class AngularFrameworkDelegate implements FrameworkDelegate {
    private resolver;
    private injector;
    private location;
    private appRef;
    private zone;
    private elRefMap;
    private elEventsMap;
    constructor(resolver: ComponentFactoryResolver, injector: Injector, location: ViewContainerRef | undefined, appRef: ApplicationRef, zone: NgZone);
    attachViewToDom(container: any, component: any, params?: any, cssClasses?: string[]): Promise<any>;
    removeViewFromDom(_container: any, component: any): Promise<void>;
}
export declare const attachView: (zone: NgZone, resolver: ComponentFactoryResolver, injector: Injector, location: ViewContainerRef, appRef: ApplicationRef, elRefMap: WeakMap<HTMLElement, any>, elEventsMap: WeakMap<HTMLElement, () => void>, container: any, component: any, params: any, cssClasses: string[]) => any;
export declare const bindLifecycleEvents: (zone: NgZone, instance: any, element: HTMLElement) => () => void;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1kZWxlZ2F0ZS5kLnRzIiwic291cmNlcyI6WyJhbmd1bGFyLWRlbGVnYXRlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBsaWNhdGlvblJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBJbmplY3RvciwgTmdab25lLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZyYW1ld29ya0RlbGVnYXRlIH0gZnJvbSAnQGlvbmljL2NvcmUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbmd1bGFyRGVsZWdhdGUge1xyXG4gICAgcHJpdmF0ZSB6b25lO1xyXG4gICAgcHJpdmF0ZSBhcHBSZWY7XHJcbiAgICBjb25zdHJ1Y3Rvcih6b25lOiBOZ1pvbmUsIGFwcFJlZjogQXBwbGljYXRpb25SZWYpO1xyXG4gICAgY3JlYXRlKHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIGluamVjdG9yOiBJbmplY3RvciwgbG9jYXRpb24/OiBWaWV3Q29udGFpbmVyUmVmKTogQW5ndWxhckZyYW1ld29ya0RlbGVnYXRlO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFuZ3VsYXJGcmFtZXdvcmtEZWxlZ2F0ZSBpbXBsZW1lbnRzIEZyYW1ld29ya0RlbGVnYXRlIHtcclxuICAgIHByaXZhdGUgcmVzb2x2ZXI7XHJcbiAgICBwcml2YXRlIGluamVjdG9yO1xyXG4gICAgcHJpdmF0ZSBsb2NhdGlvbjtcclxuICAgIHByaXZhdGUgYXBwUmVmO1xyXG4gICAgcHJpdmF0ZSB6b25lO1xyXG4gICAgcHJpdmF0ZSBlbFJlZk1hcDtcclxuICAgIHByaXZhdGUgZWxFdmVudHNNYXA7XHJcbiAgICBjb25zdHJ1Y3RvcihyZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBpbmplY3RvcjogSW5qZWN0b3IsIGxvY2F0aW9uOiBWaWV3Q29udGFpbmVyUmVmIHwgdW5kZWZpbmVkLCBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmLCB6b25lOiBOZ1pvbmUpO1xyXG4gICAgYXR0YWNoVmlld1RvRG9tKGNvbnRhaW5lcjogYW55LCBjb21wb25lbnQ6IGFueSwgcGFyYW1zPzogYW55LCBjc3NDbGFzc2VzPzogc3RyaW5nW10pOiBQcm9taXNlPGFueT47XHJcbiAgICByZW1vdmVWaWV3RnJvbURvbShfY29udGFpbmVyOiBhbnksIGNvbXBvbmVudDogYW55KTogUHJvbWlzZTx2b2lkPjtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBhdHRhY2hWaWV3OiAoem9uZTogTmdab25lLCByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBpbmplY3RvcjogSW5qZWN0b3IsIGxvY2F0aW9uOiBWaWV3Q29udGFpbmVyUmVmLCBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmLCBlbFJlZk1hcDogV2Vha01hcDxIVE1MRWxlbWVudCwgYW55PiwgZWxFdmVudHNNYXA6IFdlYWtNYXA8SFRNTEVsZW1lbnQsICgpID0+IHZvaWQ+LCBjb250YWluZXI6IGFueSwgY29tcG9uZW50OiBhbnksIHBhcmFtczogYW55LCBjc3NDbGFzc2VzOiBzdHJpbmdbXSkgPT4gYW55O1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBiaW5kTGlmZWN5Y2xlRXZlbnRzOiAoem9uZTogTmdab25lLCBpbnN0YW5jZTogYW55LCBlbGVtZW50OiBIVE1MRWxlbWVudCkgPT4gKCkgPT4gdm9pZDtcclxuIl19